on:
  workflow_call:
    inputs:
      working-directory:
        type: string
        description: Directory containing Terraform files
        required: true
      apply:
        type: boolean
        description: Whether to apply the changes or not
        required: false
        default: false

jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform format and validate
        run: |
          terraform fmt -check
          terraform validate

      - name: Terraform plan
        id: tf-plan
        run: |
          terraform plan -no-color -input=false -out tf_plan.txt \
            -var cluster_name=${{ env.CLUSTER_NAME }} \
            -var digitalocean_token=${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Output Plan Summary
        run: |
          echo "## :book: Terraform Plan" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`${{ steps.tf-plan.outputs.stdout }}\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tf_plan
          path: tf_plan.txt

  apply:
    needs: plan
    runs-on: ubuntu-latest
    if: ${{ inputs.apply }}
    steps:
      - name: Download plan
        uses: actions/download-artifact@v4
        with:
          name: tf_plan

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}

      - name: Terraform Apply
        id: tf-apply
        run: |
          terraform apply -auto-approve -no-color -input=false ./tf_plan.txt ${{ inputs.tf-args }}

      - name: Output Apply Summary
        run: |
          echo "## :shipit: Terraform Apply" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`${{ steps.tf-apply.outputs.stdout }}\`\`\`" >> $GITHUB_STEP_SUMMARY