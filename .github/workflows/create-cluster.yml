name: Create K8s Cluster on DigitalOcean

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  CLUSTER_NAME: main
  CLOUDFLARE_DOMAIN: zachsampson.dev

jobs:
  create-cluster:
    concurrency: ${{ github.repository }}
    runs-on: ubuntu-latest
    name: Create cluster on DigitalOcean
    defaults:
      run:
        working-directory: ./terraform/cluster
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform format and validate
        run: |
          terraform fmt -check
          terraform validate

      - name: Terraform plan
        id: tf-plan
        run: |
          terraform plan -no-color -input=false -out tf_plan.txt \
            -var cluster_name=${{ env.CLUSTER_NAME }} \
            -var digitalocean_token=${{ secrets.DIGITALOCEAN_TOKEN }}
          
          if terraform show -no-color tf_plan.txt | grep -q "No changes."; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
          else
            echo "has-changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Output Plan Summary
        run: |
          echo "# Create Cluster" >> $GITHUB_STEP_SUMMARY
          echo "## :book: Terraform Plan" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`${{ steps.tf-plan.outputs.stdout }}\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: cluster_tf_plan
          path: ./terraform/cluster/tf_plan.txt

      - name: Terraform Apply
        if: ${{ github.ref == 'refs/heads/main' && steps.tf-plan.outputs.has-changes == 'true' }}
        id: tf-apply
        run: |
          terraform apply ./tf_plan.txt

      - name: Output Apply Summary
        if: ${{ github.ref == 'refs/heads/main' && steps.tf-plan.outputs.has-changes == 'true' }}
        run: |
          echo "## :shipit: Terraform Apply" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`${{ steps.tf-apply.outputs.stdout }}\`\`\`" >> $GITHUB_STEP_SUMMARY

  ingress:
    needs: create-cluster
    uses: ./.github/workflows/setup-ingress.yml
    with:
      apply: ${{ github.ref == 'refs/heads/main' }}
      domain: zachsampson.dev
      cluster-name: main
    secrets: inherit
