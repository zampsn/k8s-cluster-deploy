name: Create K8s Cluster on DigitalOcean

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
    paths:
      - ../../terraform/**
      - .github/workflows/cluster.yml
  push:
    branches: [ main ]
    paths:
      - ../../terraform/**
      - .github/workflows/cluster.yml

env:
  CLUSTER_NAME: main

jobs:
  terraform:
    name: Create ${{ env.CLUSTER_NAME }} cluster
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}

      - name: Terraform init
        run: terraform init

      - name: Terraform format
        run: terraform fmt -check

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        if: ${{ github.ref != 'refs/heads/main' }}
        id: tf-plan
        run: |
          terraform plan -no-color -input=false \
            -var digitalocean_token=${{ secrets.DIGITALOCEAN_TOKEN }} \
            -var cluster_name=${{ env.CLUSTER_NAME }}

      - name: Output Plan Summary
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          echo "# :gear: Init Cluster :gear:" >> $GITHUB_STEP_SUMMARY
          echo "## :book: Terraform Plan" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`${{ steps.tf-plan.outputs.stdout }}\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Terraform Apply
        id: tf-apply
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          terraform apply -auto-approve -no-color -input=false \
            -var digitalocean_token=${{ secrets.DIGITALOCEAN_TOKEN }} \
            -var cluster_name=${{ inputs.cluster-name }}

      - name: Output Apply Summary
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "## :shipit: Terraform Apply" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`${{ steps.tf-apply.outputs.stdout }}\`\`\`" >> $GITHUB_STEP_SUMMARY

  ingress:
    name: Create Nginx ingress
    runs-on: ubuntu-latest
    needs: terraform
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Install Kubectl
        uses: azure/setup-kubectl@v3

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Save kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ env.CLUSTER_NAME }}

      - name: Deploy Nginx ingress controller
        run: |
          helm upgrade --install ingress-nginx ingress-nginx \
            --repo https://kubernetes.github.io/ingress-nginx \
            --namespace ingress-nginx --create-namespace \
            --set controller.replicaCount=2 \
            --set fullnameOverride=nginx
